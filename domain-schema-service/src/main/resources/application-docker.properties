# Database Configuration for Docker
spring.datasource.url=jdbc:postgresql://postgres:5432/gigapress
spring.datasource.username=gigapress
spring.datasource.password=gigapress123

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=domain-schema-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Redis Configuration
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.password=

# MCP Server Integration (disabled for light version)
mcp.server.url=http://localhost:8082
mcp.server.timeout=30000

# Dynamic Update Engine Integration (disabled for light version)
update.engine.url=http://localhost:8081
update.engine.timeout=30000