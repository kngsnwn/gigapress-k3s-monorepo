name: Deploy Changed Services

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  K3S_SERVER: ${{ secrets.K3S_SERVER }}
  K3S_TOKEN: ${{ secrets.K3S_TOKEN }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_services: ${{ steps.changes.outputs.changed_services }}
      has_changes: ${{ steps.changes.outputs.has_changes }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Detect changed services
      id: changes
      run: |
        chmod +x ./scripts/detect-changes.sh
        ./scripts/detect-changes.sh
        
        # Check if any services changed
        if [ -f $GITHUB_OUTPUT ] && grep -q "changed_services=" $GITHUB_OUTPUT; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "changed_services=" >> $GITHUB_OUTPUT
        fi

  build-and-deploy:
    needs: detect-changes
    if: needs.detect-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(format('["{0}"]', needs.detect-changes.outputs.changed_services)) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/gigapress-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./services/${{ matrix.service }}
        file: ./services/${{ matrix.service }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Configure kubectl for K3s
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.K3S_KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Update deployment image
      run: |
        kubectl set image deployment/${{ matrix.service }} \
          ${{ matrix.service }}=${{ env.REGISTRY }}/${{ github.repository_owner }}/gigapress-${{ matrix.service }}:${{ github.sha }} \
          -n gigapress
        
        kubectl rollout status deployment/${{ matrix.service }} -n gigapress --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods -l app=${{ matrix.service }} -n gigapress
        kubectl describe deployment/${{ matrix.service }} -n gigapress

  notify:
    needs: [detect-changes, build-and-deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.detect-changes.outputs.has_changes }}" == "false" ]; then
          echo "✅ No changes detected - no deployment needed"
        elif [ "${{ needs.build-and-deploy.result }}" == "success" ]; then
          echo "✅ Deployment successful for services: ${{ needs.detect-changes.outputs.changed_services }}"
        else
          echo "❌ Deployment failed for services: ${{ needs.detect-changes.outputs.changed_services }}"
          exit 1
        fi